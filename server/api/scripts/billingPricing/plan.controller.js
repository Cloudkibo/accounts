const PlanPermissionsModel = require('../../v1/permissions_plan/Permissions_Plan.model')
const PlanUsageModel = require('../../v1/featureUsage/planUsage.model')
const Plans = require('../../v1/plans/plans.model')

exports.planPermissions = function (req, res) {
  const basicPlan = {
    customer_matching: false,
    dashboard: true,
    broadcasts: true,
    broadcasts_templates: false,
    polls: true,
    polls_reports: true,
    surveys: true,
    surveys_reports: true,
    csv_exports: true,
    livechat: true,
    autoposting: false,
    menu: true,
    manage_pages: true,
    manage_subscribers: true,
    subscribe_to_messenger: true,
    team_members_management: true,
    messenger_links: true,
    comment_capture: false,
    messenger_code: true,
    analytics: true,
    buy_button: false,
    segmentation_lists: true,
    greeting_text: true,
    welcome_message: true,
    livechat_response_methods: true,
    webhook: false,
    survey_templates: false,
    poll_templates: false,
    custom_fields: true,
    tags: true,
    unsubscribe_subscribers: false,
    user_input: false,
    flow_builder: true,
    sponsored_broadcast: true,
    scheduled_sponsored_broadcast: true,
    autoposting_history: false,
    rss_integration: false,
    news_integration: false,
    sequence_messaging: true,
    landing_pages: true,
    json_ads: true,
    customer_chat_plugin: false,
    checkbox_plugin: true,
    overlay_widgets: true,
    invite_members: true,
    google_sheets_integration: false,
    dialogflow_integration: false,
    hubspot_integration: false,
    advanced_settings: true,
    resolve_reopen_sessions: true,
    search_chat: false,
    hide_messages_after_days: 30,
    assign_sessions: true,
    pending_chat_flag: true,
    smart_replies: true,
    chatbot_automation: false,
    delete_account_information: true
  }
  const standardPlan = {
    customer_matching: false,
    dashboard: true,
    broadcasts: true,
    broadcasts_templates: false,
    polls: true,
    polls_reports: true,
    surveys: true,
    surveys_reports: true,
    csv_exports: true,
    livechat: true,
    autoposting: false,
    menu: true,
    manage_pages: true,
    manage_subscribers: true,
    subscribe_to_messenger: true,
    team_members_management: true,
    messenger_links: true,
    comment_capture: true,
    messenger_code: true,
    analytics: true,
    buy_button: true,
    segmentation_lists: true,
    greeting_text: true,
    welcome_message: true,
    livechat_response_methods: true,
    webhook: false,
    survey_templates: true,
    poll_templates: true,
    custom_fields: true,
    tags: true,
    unsubscribe_subscribers: true,
    user_input: true,
    flow_builder: true,
    sponsored_broadcast: true,
    scheduled_sponsored_broadcast: true,
    autoposting_history: false,
    rss_integration: false,
    news_integration: false,
    sequence_messaging: true,
    landing_pages: true,
    json_ads: true,
    customer_chat_plugin: true,
    checkbox_plugin: true,
    overlay_widgets: true,
    invite_members: true,
    google_sheets_integration: false,
    dialogflow_integration: false,
    hubspot_integration: false,
    advanced_settings: true,
    resolve_reopen_sessions: true,
    search_chat: true,
    hide_messages_after_days: 60,
    assign_sessions: true,
    pending_chat_flag: true,
    smart_replies: true,
    chatbot_automation: false,
    delete_account_information: true
  }
  const premiumPlan = {
    customer_matching: true,
    dashboard: true,
    broadcasts: true,
    broadcasts_templates: true,
    polls: true,
    polls_reports: true,
    surveys: true,
    surveys_reports: true,
    csv_exports: true,
    livechat: true,
    autoposting: true,
    menu: true,
    manage_pages: true,
    manage_subscribers: true,
    subscribe_to_messenger: true,
    team_members_management: true,
    messenger_links: true,
    comment_capture: true,
    messenger_code: true,
    analytics: true,
    buy_button: true,
    segmentation_lists: true,
    greeting_text: true,
    welcome_message: true,
    livechat_response_methods: true,
    webhook: true,
    survey_templates: true,
    poll_templates: true,
    custom_fields: true,
    tags: true,
    unsubscribe_subscribers: true,
    user_input: true,
    flow_builder: true,
    sponsored_broadcast: true,
    scheduled_sponsored_broadcast: true,
    autoposting_history: true,
    rss_integration: true,
    news_integration: true,
    sequence_messaging: true,
    landing_pages: true,
    json_ads: true,
    customer_chat_plugin: true,
    checkbox_plugin: true,
    overlay_widgets: true,
    invite_members: true,
    google_sheets_integration: true,
    dialogflow_integration: true,
    hubspot_integration: true,
    advanced_settings: true,
    resolve_reopen_sessions: true,
    search_chat: true,
    hide_messages_after_days: 90,
    assign_sessions: true,
    pending_chat_flag: true,
    smart_replies: true,
    chatbot_automation: true,
    delete_account_information: true
  }
  const enterprisePlan = {
    customer_matching: true,
    dashboard: true,
    broadcasts: true,
    broadcasts_templates: true,
    polls: true,
    polls_reports: true,
    surveys: true,
    surveys_reports: true,
    csv_exports: true,
    livechat: true,
    autoposting: true,
    menu: true,
    manage_pages: true,
    manage_subscribers: true,
    subscribe_to_messenger: true,
    team_members_management: true,
    messenger_links: true,
    comment_capture: true,
    messenger_code: true,
    analytics: true,
    buy_button: true,
    segmentation_lists: true,
    greeting_text: true,
    welcome_message: true,
    livechat_response_methods: true,
    webhook: true,
    survey_templates: true,
    poll_templates: true,
    custom_fields: true,
    tags: true,
    unsubscribe_subscribers: true,
    user_input: true,
    flow_builder: true,
    sponsored_broadcast: true,
    scheduled_sponsored_broadcast: true,
    autoposting_history: true,
    rss_integration: true,
    news_integration: true,
    sequence_messaging: true,
    landing_pages: true,
    json_ads: true,
    customer_chat_plugin: true,
    checkbox_plugin: true,
    overlay_widgets: true,
    invite_members: true,
    google_sheets_integration: true,
    dialogflow_integration: true,
    hubspot_integration: true,
    advanced_settings: true,
    resolve_reopen_sessions: true,
    search_chat: true,
    hide_messages_after_days: 90,
    assign_sessions: true,
    pending_chat_flag: true,
    smart_replies: true,
    chatbot_automation: true,
    delete_account_information: true
  }

  const updateBasic = PlanPermissionsModel.update({plan_id: '5cac6798ad864163a0b37459'}, basicPlan).exec()
  const updateStandard = PlanPermissionsModel.update({plan_id: '5cac6798ad864163a0b3745a'}, standardPlan).exec()
  const updatePremium = PlanPermissionsModel.update({plan_id: '5cac6798ad864163a0b3745b'}, premiumPlan).exec()
  const updateEnterprise = PlanPermissionsModel.update({plan_id: '5cac6798ad864163a0b3745c'}, enterprisePlan).exec()

  Promise.all([updateBasic, updateStandard, updatePremium, updateEnterprise])
    .then(done => {
      return res.status(200).json({status: 'success', description: 'Normalized successfully!'})
    })
    .catch(err => {
      return res.status(500).json({status: 'failed', description: `Failed to normalize plan permissions ${err}`})
    })
}

exports.planUsage = function (req, res) {
  // creating usage for free plan which was not there
  const freePlan = {
    broadcasts: -1,
    surveys: -1,
    polls: -1,
    broadcast_templates: 0,
    survey_templates: 0,
    polls_templates: 0,
    chat_messages: -1,
    facebook_pages: 1,
    bots: 1,
    subscribers: 500,
    phone_invitation: 0,
    facebook_autoposting: 0,
    twitter_autoposting: 0,
    wordpress_autoposting: 0,
    broadcast_sequences: 1,
    messages_per_sequence: 3,
    segmentation_lists: 3,
    custom_fields: 0,
    tags: 10,
    tags_per_subscriber: 1,
    template_categories: 0,
    rss_feeds: 0,
    news_integration_feeds: 0,
    broadcast_levels: 3,
    comment_capture_rules: 0,
    messenger_codes: -1,
    landing_pages: -1,
    json_ads: -1,
    messenger_ref_urls: -1,
    overlay_widgets: -1,
    members: 1,
    teams: 0,
    external_integrations: 0,
    intents_per_bot: 25,
    sponsored_broadcasts: -1,
    chatbot_automation: 0,
    chatbot_automation_levels: 0
  }

  const basicPlan = {
    broadcasts: -1,
    surveys: -1,
    polls: -1,
    broadcast_templates: 0,
    survey_templates: 0,
    polls_templates: 0,
    chat_messages: -1,
    facebook_pages: 3,
    bots: 1,
    subscribers: 2500,
    phone_invitation: 0,
    facebook_autoposting: 0,
    twitter_autoposting: 0,
    wordpress_autoposting: 0,
    broadcast_sequences: 1,
    messages_per_sequence: 3,
    segmentation_lists: 3,
    custom_fields: 0,
    tags: 10,
    tags_per_subscriber: 1,
    template_categories: 0,
    rss_feeds: 0,
    news_integration_feeds: 0,
    broadcast_levels: 3,
    comment_capture_rules: 0,
    messenger_codes: -1,
    landing_pages: -1,
    json_ads: -1,
    messenger_ref_urls: -1,
    overlay_widgets: -1,
    members: 1,
    teams: 0,
    external_integrations: 0,
    intents_per_bot: 25,
    sponsored_broadcasts: -1,
    chatbot_automation: 0,
    chatbot_automation_levels: 0
  }
  const standardPlan = {
    broadcasts: -1,
    surveys: -1,
    polls: -1,
    broadcast_templates: 0,
    survey_templates: 0,
    polls_templates: 0,
    chat_messages: -1,
    facebook_pages: 5,
    bots: 3,
    subscribers: 5000,
    phone_invitation: -1,
    facebook_autoposting: 0,
    twitter_autoposting: 0,
    wordpress_autoposting: 0,
    broadcast_sequences: 3,
    messages_per_sequence: 5,
    segmentation_lists: 5,
    custom_fields: 10,
    tags: 25,
    tags_per_subscriber: 3,
    template_categories: 0,
    rss_feeds: 0,
    news_integration_feeds: 0,
    broadcast_levels: 5,
    comment_capture_rules: 5,
    messenger_codes: -1,
    landing_pages: -1,
    json_ads: -1,
    messenger_ref_urls: -1,
    overlay_widgets: -1,
    members: 3,
    teams: 3,
    external_integrations: 0,
    intents_per_bot: 50,
    sponsored_broadcasts: -1,
    chatbot_automation: 0,
    chatbot_automation_levels: 0
  }
  const premiumPlan = {
    broadcasts: -1,
    surveys: -1,
    polls: -1,
    broadcast_templates: 20,
    survey_templates: 0,
    polls_templates: 0,
    chat_messages: -1,
    facebook_pages: 10,
    bots: 5,
    subscribers: 10000,
    phone_invitation: -1,
    facebook_autoposting: 5,
    twitter_autoposting: 5,
    wordpress_autoposting: 3,
    broadcast_sequences: 5,
    messages_per_sequence: 10,
    segmentation_lists: 10,
    custom_fields: 25,
    tags: 50,
    tags_per_subscriber: 5,
    template_categories: 10,
    rss_feeds: 25,
    news_integration_feeds: 25,
    broadcast_levels: 10,
    comment_capture_rules: 10,
    messenger_codes: -1,
    landing_pages: -1,
    json_ads: -1,
    messenger_ref_urls: -1,
    overlay_widgets: -1,
    members: 10,
    teams: 5,
    external_integrations: -1,
    intents_per_bot: 100,
    sponsored_broadcasts: -1,
    chatbot_automation: -1,
    chatbot_automation_levels: 3
  }
  const enterprisePlan = {
    broadcasts: -1,
    surveys: -1,
    polls: -1,
    broadcast_templates: 20,
    survey_templates: 0,
    polls_templates: 0,
    chat_messages: -1,
    facebook_pages: -1,
    bots: 5,
    subscribers: -1,
    phone_invitation: -1,
    facebook_autoposting: 5,
    twitter_autoposting: 5,
    wordpress_autoposting: 3,
    broadcast_sequences: 5,
    messages_per_sequence: 10,
    segmentation_lists: 10,
    custom_fields: 25,
    tags: 50,
    tags_per_subscriber: 5,
    template_categories: 10,
    rss_feeds: 25,
    news_integration_feeds: 25,
    broadcast_levels: 10,
    comment_capture_rules: 10,
    messenger_codes: -1,
    landing_pages: -1,
    json_ads: -1,
    messenger_ref_urls: -1,
    overlay_widgets: -1,
    members: 10,
    teams: 5,
    external_integrations: -1,
    intents_per_bot: 100,
    sponsored_broadcasts: -1,
    chatbot_automation: -1,
    chatbot_automation_levels: 5
  }

  const updateFree = PlanUsageModel.update({planId: '608c2c775b6541cd34743b48'}, freePlan, {new: true, upsert: true}).exec()

  const updateBasic = PlanUsageModel.update({planId: '5cac6798ad864163a0b37459'}, basicPlan).exec()
  const updateStandard = PlanUsageModel.update({planId: '5cac6798ad864163a0b3745a'}, standardPlan).exec()
  const updatePremium = PlanUsageModel.update({planId: '5cac6798ad864163a0b3745b'}, premiumPlan).exec()
  const updateEnterprise = PlanUsageModel.update({planId: '5cac6798ad864163a0b3745c'}, enterprisePlan).exec()

  Promise.all([updateFree, updateBasic, updateStandard, updatePremium, updateEnterprise])
    .then(done => {
      return res.status(200).json({status: 'success', description: 'Normalized successfully!'})
    })
    .catch(err => {
      return res.status(500).json({status: 'failed', description: `Failed to normalize plan usage ${err}`})
    })
}

exports.createFbUpdatePlans = function (req, res) {
  // adding new free plan which was not there before
  const freePlan = Plans.findOneAndUpdate({unique_ID: 'plan_F'}, {
    trial_period: 30,
    name: 'Free Plan',
    unique_ID: 'plan_F',
    amount: 0,
    interval: 'monthly',
    platform: 'messenger'
  }, { new: true, upsert: true }).exec()

  const basicPlan = Plans.findOneAndUpdate({unique_ID: 'plan_A'}, {
    trial_period: 30,
    name: 'Basic Plan',
    unique_ID: 'plan_A',
    amount: 10,
    interval: 'monthly',
    platform: 'messenger'
  }, { new: true, upsert: true }).exec()

  const standardPlan = Plans.findOneAndUpdate({unique_ID: 'plan_B'}, {
    trial_period: 30,
    name: 'Standard Plan',
    unique_ID: 'plan_B',
    amount: 15,
    interval: 'monthly',
    platform: 'messenger'
  }, { new: true, upsert: true }).exec()

  const premiumPlan = Plans.findOneAndUpdate({unique_ID: 'plan_C'}, {
    trial_period: 30,
    name: 'Premium Plan',
    unique_ID: 'plan_C',
    amount: 25,
    interval: 'monthly',
    platform: 'messenger'
  }, { new: true, upsert: true }).exec()

  const enterprisePlan = Plans.findOneAndUpdate({unique_ID: 'plan_D'}, {
    trial_period: 30,
    name: 'Enterprise Plan',
    unique_ID: 'plan_D',
    interval: 'monthly',
    platform: 'messenger'
  }, { new: true, upsert: true }).exec()

  Promise.all([freePlan, basicPlan, standardPlan, premiumPlan, enterprisePlan])
    .then(done => {
      return res.status(200).json({status: 'success', description: 'Normalized successfully!'})
    })
    .catch(err => {
      return res.status(500).json({status: 'failed', description: `Failed to normalize plan usage ${err}`})
    })
}
